/*!
 * Bootstrap v3.3.5 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

// Core variables and mixins
@import "components/variables";
@import "components/mixins";

// Reset and dependencies
//@import "components/normalize";
//@import "components/print";
//@import "components/glyphicons";

// Core CSS
//@import "components/scaffolding";
//@import "components/type";
//@import "components/code";
//@import "components/grid";
//@import "components/tables";
//@import "components/forms";

@mixin form-inline {

  // Kick in the inline
  @media (min-width: $screen-sm-min) {
    // Inline-block all the things for "inline"
    .form-group {
      display: inline-block;
      margin-bottom: 0;
      vertical-align: middle;
    }

    // In navbar-form, allow folks to *not* use `.form-group`
    .form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    // Make static controls behave like regular ones
    .form-control-static {
      display: inline-block;
    }

    .input-group {
      display: inline-table;
      vertical-align: middle;

      .input-group-addon,
      .input-group-btn,
      .form-control {
        width: auto;
      }
    }

    // Input groups need that 100% width though
    .input-group > .form-control {
      width: 100%;
    }

    .control-label {
      margin-bottom: 0;
      vertical-align: middle;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .radio,
    .checkbox {
      display: inline-block;
      margin-top: 0;
      margin-bottom: 0;
      vertical-align: middle;

      label {
        padding-left: 0;
      }
    }
    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
      position: relative;
      margin-left: 0;
    }

    // Re-override the feedback icon.
    .has-feedback .form-control-feedback {
      top: 0;
    }
  }
}
// [converter] extracted as `@mixin form-inline` for libsass compatibility
.form-inline {
  @include form-inline;
}

@import "components/buttons";

// Components
@import "components/component-animations";
@import "components/dropdowns";
@import "components/button-groups";
//@import "components/input-groups";
@import "components/navs";
@import "components/navbar";
//@import "components/breadcrumbs";
//@import "components/pagination";
//@import "components/pager";
@import "components/labels";
//@import "components/badges";
//@import "components/jumbotron";
@import "components/thumbnails";
@import "components/alerts";
//@import "components/progress-bars";
//@import "components/media";
@import "components/list-group";
//@import "components/panels";
@import "components/responsive-embed";
//@import "components/wells";
@import "components/close";

// Components w/ JavaScript
//@import "components/modals";
@import "components/tooltip";
//@import "components/popovers";
//@import "components/carousel";

// Utility classes
@import "components/utilities";
@import "components/responsive-utilities";
